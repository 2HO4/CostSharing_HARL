{"frames":[{"func":"arima(data_ts_withshock, order = c(1, 1, 2), include.mean = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"optim(init[mask], armafn, method = optim.method, hessian = TRUE, \n    control = optim.control, trans = as.logical(transform.pars))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (par) \nfn(par, ...))(c(1.41009986900273, -1.42283216608466, 0.432752440999628\n))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fn(par, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(upARIMA(mod, trarma[[1L]], trarma[[2L]]), error = function(e) NULL)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in base::try(forecast_diff_demand_mean, silent = TRUE) : \n  object 'forecast_diff_demand_mean' not found\n"}
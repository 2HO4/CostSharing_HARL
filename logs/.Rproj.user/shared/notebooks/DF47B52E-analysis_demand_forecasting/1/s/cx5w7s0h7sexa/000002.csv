"0","```r
# Sequentially update the ARIMA model

# All weeks from 01/06/2024 to 31/12/2099
weeks <- c(29:52, rep(1:52, 2099 - 2024), 1:20)
events <- rownames(probabilities_events)

# Copy of data_ts and arima_model
data_ts_withshock <- data_ts
arima_model_withshock <- model_demand
forecast_demand_withshock <- forecast_demand
forecast_demand_mean <- data.frame(mean=numeric(length=3944), value=numeric(length=3944))
forecast_demand_upper <- matrix(numeric(length=3944), nrow=3944, ncol=2)
forecast_demand_lower <- matrix(numeric(length=3944), nrow=3944, ncol=2)
forecast_demand_upper <- matrix(numeric(length=3944), nrow=3944, ncol=2)
forecast_demand_lower <- matrix(numeric(length=3944), nrow=3944, ncol=2)
forecast_events <- numeric(length=3944)

for (i in 1:3944) {
    # Forecast the demand for the next week
    next_week_demand <- forecast(arima_model_withshock, h=1)
    
    # Calculate the standard deviation
    # standard_deviation <- (next_week_demand$mean - next_week_demand$lower[2])/2
    standard_deviation <- estimate_standard_deviation(next_week_demand$lower[2], next_week_demand$upper[2])
    
    # Calculate the deviation from the mean
    deviation <- rnorm(1, 0, standard_deviation)
    # deviation <- 0
    
    # Calculate the impact of a random shock event on the demand
    i_event <- sample(1:length(rownames(probabilities_events)), 1, prob=probabilities_events_weekly[[weeks[i]]])
    impact <- sample_impact(events[i_event])
    forecast_events[i] <- i_event
    
    # Generate a random demand value
    forecast_demand_mean[i,] <- c(floor(next_week_demand$mean), floor(impact*(next_week_demand$mean + deviation)))
    forecast_demand_upper[i,] <- impact*next_week_demand$upper[1,]
    forecast_demand_lower[i,] <- impact*next_week_demand$lower[1,]
    
    # Add the new demand value to the time series
    data_ts_withshock <- ts(c(data_ts_withshock, forecast_demand_mean$value[i]), start=c(1991, 6), frequency=52)
    
    # Fit an ARIMA model to the updated time series
    arima_model_withshock <- arima(
        data_ts_withshock, 
        order=c(1, 1, 2),
        include.mean=TRUE
    )
}
```"
"1","[WARNING] Deprecated: --self-contained. use --embed-resources --standalone
"
"0","```r
forecast_demand_withshock$mean <- ts(forecast_demand_mean$value, start=c(2024, 29), frequency=52)
forecast_demand_withshock$upper <- ts(forecast_demand_upper, start=c(2024, 29), frequency=52)
forecast_demand_withshock$lower <- ts(forecast_demand_lower, start=c(2024, 29), frequency=52)
forecast_events <- ts(forecast_events, start=c(2024, 29), frequency=52)

forecast_demand_withshock
```"

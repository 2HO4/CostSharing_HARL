"0","```r
# Sequentially update the ARIMA model

# Copy of data_ts and arima_model
data_ts_copy <- data_ts
arima_model_copy <- arima_model
forecast_demand_copy <- forecast_demand
forecast_demand_mean <- numeric(length=3944)
forecast_demand_upper <- matrix(numeric(length=3944), nrow=3944, ncol=2)
forecast_demand_lower <- matrix(numeric(length=3944), nrow=3944, ncol=2)

# Function to estimate standard deviation from 95% confidence interval
estimate_standard_deviation <- function(lower, upper) {
    #              MOE       /  Z
    return ((upper - lower)/2/4.128)
}

for (i in 1:3944) {
    # Forecast the demand for the next week
    next_week_demand <- forecast(arima_model_copy, h=1)
    
    # Calculate the standard deviation
    standard_deviation <- estimate_standard_deviation(next_week_demand$lower[2], next_week_demand$upper[2])
    
    # Calculate the deviation from the mean
    deviation <- rnorm(1, 0, standard_deviation)
    
    # Generate a random demand value
    forecast_demand_mean[i] <- floor(next_week_demand$mean + rnorm(1, 0, standard_deviation))
    forecast_demand_upper[i,] <- next_week_demand$upper[1,] + deviation
    forecast_demand_lower[i,] <- next_week_demand$lower[1,] + deviation
    
    # Add the new demand value to the time series
    data_ts_copy <- ts(c(data_ts_copy, forecast_demand_mean[i]), start=c(1991, 6), frequency=52)
    
    # Fit an ARIMA model to the updated time series
    arima_model_copy <- arima(
        data_ts_copy, 
        order=c(1, 1, 2),
        include.mean=TRUE
    )
}
```"
"1","[WARNING] Deprecated: --self-contained. use --embed-resources --standalone
"
"0","```r
forecast_demand_copy$mean <- ts(forecast_demand_mean, start=c(2024, 29), frequency=52)
forecast_demand_copy$upper <- ts(forecast_demand_upper, start=c(2024, 29), frequency=52)
forecast_demand_copy$lower <- ts(forecast_demand_lower, start=c(2024, 29), frequency=52)

forecast_demand_copy
```"
